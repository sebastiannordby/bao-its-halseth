name: Deploy to Azure

on:
  push:
    branches:
      - main

jobs:
  publish-acr:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Log in to Azure Container Registry
        run: az acr login --name cisapplication

      - name: Build and push Docker image to Azure Container Registry
        if: github.ref == 'refs/heads/main'
        run: |
          docker build -t cisapplication.azurecr.io/cisapp:${{ github.sha }} -t cisapplication.azurecr.io/cisapp:latest -f CIS.WebApp/Dockerfile .
          docker push cisapplication.azurecr.io/cisapp:${{ github.sha }}
          docker push cisapplication.azurecr.io/cisapp:latest
          
  terraform-deploy:
    needs: [publish-acr]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: latest   

      - name: Terraform Init
        working-directory: ./Infrastructure
        run: |
          terraform init \
            -backend-config="resource_group_name=${{fromJson(secrets.CISCONFIG).BACKEND_RG_NAME}}" \
            -backend-config="storage_account_name=${{fromJson(secrets.CISCONFIG).BACKEND_STORAGE_ACCOUNT_NAME}}" \
            -backend-config="container_name=${{fromJson(secrets.CISCONFIG).BACKEND_CONTAINER_NAME}}" \
            -backend-config="key=${{fromJson(secrets.CISCONFIG).BACKEND_KEY}}"
        env:
          TF_LOG: ERROR

      - name: Terraform Apply
        working-directory: ./Infrastructure
        run: |
          terraform apply -auto-approve -input=false \
            -var="db_server_username=${{fromJson(secrets.CISCONFIG).DB_USERNAME}}" \
            -var="db_server_password=${{fromJson(secrets.CISCONFIG).DB_PASSWORD}}" \
            -var="acr_username=${{fromJson(secrets.CISCONFIG).ACR_USERNAME}}" \
            -var="acr_password=${{fromJson(secrets.CISCONFIG).ACR_PASSWORD}}"
        env:
          TF_LOG: ERROR          
     
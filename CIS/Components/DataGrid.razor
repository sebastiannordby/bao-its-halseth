@using CIS.Domain.Customers.Models
@using CIS.Domain.Customers

<FluentLayout>
    <FluentDataGrid TGridItem=Customer Items="_displayData" >
        <PropertyColumn Property="@(p=>p.Number)" Sortable="true"/>
        <PropertyColumn Property="@(p=>p.Name)" Sortable="true"/>
        <PropertyColumn Property="@(p=>p.ContactPersonName)" Sortable="true"/>
        <PropertyColumn Property="@(p=>p.ContactPersonEmailAddress)" Sortable="true"/>
        <PropertyColumn Property="@(p=>p.ContactPersonPhoneNumber)" Sortable="true"/>
        <TemplateColumn Sortable="true" Align="Align.Center">
            <FluentCheckbox Value="@((Customer p)=>p.IsActive)"/>
        </TemplateColumn>



    </FluentDataGrid>
</FluentLayout>

@code {
    [Parameter]
    public IQueryable<Customer> Data { get;set; }

    [Parameter]
    public Customer ItemSelected { get; set; }

    [Parameter] 
    public EventCallback<Customer> ItemSelectedChanged { get; set; }

    private IQueryable<Customer> _displayData;
    public IList<Customer> _itemSelected { get; set; }

    protected override async void OnInitialized()
    {
        Data = new();

        for (int i = 0; i < 50; i++)
        {
            var customer = await Customer.Initialize(
                number: i,
                name: "Narvesen Oslo S " + 1,
                contactPersonName: "Jon Doe " + i,
                contactPersonEmailAddress: "jondoe" + i + "@gmail.com",
                contactPersonPhoneNumber: "" + i,
                customerGroupNumber: null,
                isActive: true
            );

            Data.Add(customer);
        }

        _displayData = Data;
    }

    private async void ItemSelected_Changed(IList<Customer> itemSelected)
    {
        _itemSelected = itemSelected;
        ItemSelected = itemSelected.FirstOrDefault();
        await ItemSelectedChanged.InvokeAsync(ItemSelected);
    }

    private void SearchChanged(string input)
    {
        input = input.ToLower();
        _displayData = Data.Where(s => s.Name.ToLower().Contains(input)
        || s.Number.ToString().Contains(input)
        || s.ContactPersonName.ToLower().Contains(input)
        || s.ContactPersonEmailAddress.ToLower().Contains(input)
        || s.ContactPersonPhoneNumber.ToLower().Contains(input)).ToList();
    }
}
